/* ---------------------------------------
 * Author: Martin Pane (martintayx@gmail.com) (@tayx94)
 * Project: Graphy - Ultimate Stats Monitor
 * Date: 15-Dec-17
 * Studio: Tayx
 * Unauthorized copying of this file, via any medium is strictly prohibited
 * Proprietary and confidential
 * -------------------------------------*/

using UnityEngine;
using System.Collections;
using System.Text;
using UnityEngine.UI;

namespace Tayx.Graphy.Audio
{
    public class AudioText : MonoBehaviour
    {

        #region Private Variables

        private GraphyManager m_graphyManager;

        private AudioMonitor m_audioMonitor;

        [SerializeField] private Text m_DBText;

        private int m_updateRate = 4;

        private float m_deltaTimeOffset = 0;

        private StringBuilder m_sb;

        #endregion

        #region Unity Methods

        void Awake()
        {
            Init();
        }

        void Update()
        {
            if (m_audioMonitor.SpectrumDataAvailable)
            {
                if (m_deltaTimeOffset > 1f / m_updateRate)
                {
                    m_deltaTimeOffset = 0;

                    // I use a StringBuilder to reduce the garbage generated by string concatenation

                    m_sb.Length = 0;
                    m_sb.AppendFormat("{0:0.0}", m_audioMonitor.MaxDB);
                    m_sb.Append(" dB");

                    m_DBText.text = m_sb.ToString();
                }
                else
                {
                    m_deltaTimeOffset += Time.deltaTime;
                }
            }
        }

        #endregion

        #region Public Methods

        public void UpdateParameters()
        {
            m_updateRate = m_graphyManager.AudioTextUpdateRate;
        }

        #endregion

        #region Private Methods

        private void Init()
        {
            m_graphyManager = transform.root.GetComponentInChildren<GraphyManager>();

            m_audioMonitor = GetComponent<AudioMonitor>();
            
            m_sb = new StringBuilder();
            
            UpdateParameters();
        }

        #endregion

    }
}